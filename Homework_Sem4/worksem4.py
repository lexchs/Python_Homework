# Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.
# -11 6 2 4 6 8 10 12 10 8 6 4 2
# -3 6 6 9 12 15 18
# =6 12

# a = []
# b = []
# for i in range(int(input("First size: "))): a.append(int(input(f"Number {i+1}: ")))
# for i in range(int(input("Second size: "))): b.append(int(input(f"Number {i+1}: ")))
# a = list(set(a))
# a.extend(set(b))
# a.sort()
# res = []
# for i in range(len(a)-1):
#     if a[i] == a[i+1]:res.append(a[i])
# print(*res)


# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# k = int(input("Сколько кустов?: "))
# ber=[]
# for i in range(k):
#     ber.append(int(input(f"Сколько ягод на {i+1} кусте?: ")))
# rs = []
# for i in range(len(ber)-1):
#     rs.append(ber[i-1] + ber[i] + ber[i+1])
# rs.append(ber[-2] + ber[-1] + ber[0])
# print(max(rs))